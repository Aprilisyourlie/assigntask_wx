package com.nju.assigntask.dao;

import com.nju.assigntask.entity.Release;
import org.apache.ibatis.annotations.Mapper;
import org.springframework.stereotype.Repository;

import java.util.List;
@Mapper
@Repository
public interface ReleaseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table release
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer releaseid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table release
     *
     * @mbg.generated
     */
    int insert(Release record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table release
     *
     * @mbg.generated
     */
    Release selectByPrimaryKey(Integer releaseid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table release
     *
     * @mbg.generated
     */
    List<Release> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table release
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Release record);

    List<Release> selectAllUnComplete();
    /**
     * 插入release
     */

    int insertRelease(Release release);

    /**
     * 查找ifDivided
     */
    String findDivided(int releaseid);

    /**
     * 根据releaseid查找
     * @param releaseid
     * @return
     */
    Release findReleaseById(int releaseid);

    /**
     * 根据userid查找
     * @param userid
     * @return
     */
    /**
     * 通过用户id查询该用户已发布项目
     * @param userid
     * @return
     */
    List<Release> findByUserid(int userid);

    List<String> selectPlans();

    List<Integer> selectNullResult();

    /**
     * 更新release表的ifdivided字段
     * @param releaseid
     * @param ifDivided
     * @return
     */
    int updateIfDivided(int releaseid,String ifDivided);

    /**
     * 更新release表的status字段
     * @param releaseid
     * @param status
     */
    void updateStatus(int releaseid,String status);

    /**
     * 更新release表的winalgname，最后优胜算法名
     * @param releaseid
     * @param winalgname
     */
    void updateWinalgname(int releaseid,String winalgname);

    /**
     * 更新评价
     * @param releaseId
     * @param satisfaction
     * @return
     */
    int updateSatisfactionById(Integer releaseId, String satisfaction);

}