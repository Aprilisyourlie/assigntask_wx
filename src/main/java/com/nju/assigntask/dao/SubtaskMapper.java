package com.nju.assigntask.dao;

import com.nju.assigntask.entity.Subtask;
import org.apache.ibatis.annotations.Mapper;
import org.springframework.stereotype.Repository;

import java.util.List;

@Mapper
@Repository
public interface SubtaskMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table subtask
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer subtaskid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table subtask
     *
     * @mbg.generated
     */
    int insert(Subtask record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table subtask
     *
     * @mbg.generated
     */
    Subtask selectByPrimaryKey(Integer subtaskid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table subtask
     *
     * @mbg.generated
     */
    List<Subtask> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table subtask
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Subtask record);

    /**
     * 插入subtask
     */
//    int inserSubtask(Subtask subtask);
    void insertSubtask(int dividedId,String itemName1,String itemDes1,String itemName2,String itemDes2);
//    int inserToLstmNn(Subtask subtask);
//    int insertToCnnTfidf(Subtask subtask);
//    int insertToDocIndex(Subtask subtask);
//    int insertToFinal1(Subtask subtask);
//    int insertToFinal2(Subtask subtask);

    List<Subtask> selectAllSubtask();
//    List<Subtask> selectAllLstmNn();
//    List<Subtask> selectAllCnnTfidf();
//    List<Subtask> selectAllDocIndex();
//    List<Subtask> selectAllFinal1();
//    List<Subtask> selectAllFinal2();

    /**
     * 查询score1为空的subtaskid
     * @return
     */
    List<Integer> selectNullScore1();
    List<Subtask> selectNullScoreByDividedid(int dividedid);
//    List<Integer> selectNullLstmNnScore1();
//    List<Integer> selectNullCnnTfiScore1();
//    List<Integer> selectNullDocIndexScore1();
//    List<Integer> selectNullFinal1Score1();
//    List<Integer> selectNullFinal2Score1();

    /**
     * 查询score2为空的subtaskid
     * @return
     */
    List<Integer> selectNullScore2();
//    List<Integer> selectNullLstmNnScore2();
//    List<Integer> selectNullCnnTfiScore2();
//    List<Integer> selectNullDocIndexScore2();
//    List<Integer> selectNullFinal1Score2();
//    List<Integer> selectNullFinal2Score2();

    /**
     * 查询randomnum为空的subtask
     * @return
     */
    List<Subtask> selectNullRandomnum();

    /**
     * 根据subtaskid查找记录
     * @param subtaskid
     * @return
     */
    Subtask selectSubtaskBySubid(int subtaskid);
//    Subtask selectLstmNnBySubid(int subtaskid);
//    Subtask selectCnnTfidfBySubid(int subtaskid);
//    Subtask selectDocIndexBySubid(int subtaskid);
//    Subtask selectFinal1BySubid(int subtaskid);
//    Subtask selectFinal2BySubid(int subtaskid);

    /**
     * 根据dividedid查询subtask表的score
     * @param dividedid
     * @return
     */
    List<Double> selectScore1ByDividedid(int dividedid);
    List<Double> selectScore2ByDividedid(int dividedid);

    /**
     * 根据dividedid查询subtask
     * @param divided
     * @return
     */
    List<Subtask> selectByDivided(int divided);

    int selectSumScore1(int dividedid);
    int selectSumScore2(int dividedid);
//    int selectLstmNnSumScore1(int dividedid);
//    int selectCnnTfidfSumScore1(int dividedid);
//    int selectDocIndexSumScore1(int dividedid);
//    int selectFinal1SumScore1(int dividedid);
//    int selectFinal2SumScore1(int dividedid);

//    int selectLstmNnSumScore2(int dividedid);
//    int selectCnnTfidfSumScore2(int dividedid);
//    int selectDocIndexSumScore2(int dividedid);
//    int selectFinal1SumScore2(int dividedid);
//    int selectFinal2SumScore2(int dividedid);

//    int selectItem1SumScore(Subtask subtask);//查询A1出现在itemName1时的平均score
//    int selectItem2SumScore(Subtask subtask);//查询A1出现在itemName2时的平均score

    List<Double> selectItem1Score(Subtask subtask);//查询A1出现在itemName1时的score
    List<Double> selectItem2Score(Subtask subtask);//查询A1出现在itemName2时的score

    /**
     * 更新randomNum字段
     * @param subtask
     * @return
     */
    int updateSubtaskRandom(Subtask subtask);
//    int updateLstmNnRandom(Subtask subtask);
//    int updateCnnTfidfRandom(Subtask subtask);
//    int updateDocIndexRandom(Subtask subtask);
//    int updateFinal1Random(Subtask subtask);
//    int updateFinal2Random(Subtask subtask);

    /**
     * 更新frequency
     * @param subtaskid
     * @param frequency
     * @return
     */
    void updateFre(int subtaskid,int frequency);
//    int updateFre(Subtask subtask);
//    int updateFreLstmNn(Subtask subtask);
//    int updateFreCnnTfidf(Subtask subtask);
//    int updateFreDocIndex(Subtask subtask);
//    int updateFreFinal1(Subtask subtask);
//    int updateFreFinal2(Subtask subtask);

    /**
     * 更新score1
     * @param subtaskid
     * @param score1
     * @return
     */
    int updateScore1(int subtaskid,double score1);
//    int updateLstmNnScore1(Subtask subtask);
//    int updateCnnTfiScore1(Subtask subtask);
//    int updateDocIndexScore1(Subtask subtask);
//    int updateFinal1Score1(Subtask subtask);
//    int updateFinal2Score1(Subtask subtask);

    /**
     * 更新score2
     * @param subtaskid
     * @param score2
     * @return
     */
    int updateScore2(int subtaskid,double score2);
//    int updateLstmNnScore2(Subtask subtask);
//    int updateCnnTfiScore2(Subtask subtask);
//    int updateDocIndexScore2(Subtask subtask);
//    int updateFinal1Score2(Subtask subtask);
//    int updateFinal2Score2(Subtask subtask);

    /**
     * 查询需要分派的任务
     * @param frequency
     * @return
     */
    List<Subtask> selectAssignSubtask(int frequency);





}