package com.nju.assigntask.dao;

import com.nju.assigntask.entity.Subtask;
import org.apache.ibatis.annotations.Mapper;
import org.springframework.stereotype.Repository;

import java.util.List;

@Mapper
@Repository
public interface SubtaskMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table subtask
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer subtaskid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table subtask
     *
     * @mbg.generated
     */
    int insert(Subtask record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table subtask
     *
     * @mbg.generated
     */
    Subtask selectByPrimaryKey(Integer subtaskid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table subtask
     *
     * @mbg.generated
     */
    List<Subtask> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table subtask
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Subtask record);

    /**
     * 插入subtask
     */
//    int inserSubtask(Subtask subtask);
    void insertSubtask(int dividedId,String itemName1,String itemDes1,String itemName2,String itemDes2);

    List<Subtask> selectAllSubtask();


    /**
     * 查询score1为空的subtaskid
     * @return
     */
    List<Integer> selectNullScore1();
    List<Subtask> selectNullScoreByDividedid(int dividedid);

    /**
     * 查询score2为空的subtaskid
     * @return
     */
    List<Integer> selectNullScore2();


    /**
     * 查询randomnum为空的subtask
     * @return
     */
    List<Subtask> selectNullRandomnum();

    /**
     * 根据subtaskid查找记录
     * @param subtaskid
     * @return
     */
    Subtask selectSubtaskBySubid(int subtaskid);

    /**
     * 根据dividedid查询subtask表的score
     * @param dividedid
     * @return
     */
    List<Double> selectScore1ByDividedid(int dividedid);
    List<Double> selectScore2ByDividedid(int dividedid);

    /**
     * 根据dividedid查询subtask
     * @param divided
     * @return
     */
    List<Subtask> selectByDivided(int divided);

    int selectSumScore1(int dividedid);
    int selectSumScore2(int dividedid);


    List<Double> selectItem1Score(Subtask subtask);//查询A1出现在itemName1时的score
    List<Double> selectItem2Score(Subtask subtask);//查询A1出现在itemName2时的score

    /**
     * 更新randomNum字段
     * @param subtask
     * @return
     */
    int updateSubtaskRandom(Subtask subtask);


    /**
     * 更新frequency
     * @param subtaskid
     * @param frequency
     * @return
     */
    void updateFre(int subtaskid,int frequency);

    /**
     * 更新score1
     * @param subtaskid
     * @param score1
     * @return
     */
    int updateScore1(int subtaskid,double score1);


    /**
     * 更新score2
     * @param subtaskid
     * @param score2
     * @return
     */
    int updateScore2(int subtaskid,double score2);

    /**
     * 查询需要分派的任务
     * @param frequency
     * @return
     */
    List<Subtask> selectAssignSubtask(int frequency);





}